---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:    
  name: nfs-share
  namespace: kasten-io
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi  
---
kind: Service
apiVersion: v1
metadata:
  name: nfs-server
  namespace: kasten-io
  labels:
    app: nfs-server
spec:
  type: ClusterIP  # use "LoadBalancer" to get a public ip
  selector:
    app: nfs-server
  ports:
    - name: tcp-2049
      port: 2049
      protocol: TCP
    - name: udp-111
      port: 111
      protocol: UDP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-server
  namespace: kasten-io
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      name: nfs-server
      labels:
        app: nfs-server
    spec:
      serviceAccountName: k10-k10
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: nfs-server
          image: itsthenetwork/nfs-server-alpine:latest
          env:
            - name: SHARED_DIRECTORY
              value: "/exports"
          volumeMounts:
            - mountPath: /exports
              name: nfs-vol
          securityContext:
            privileged: true
          ports:
            - name: tcp-2049
              containerPort: 2049
              protocol: TCP
            - name: udp-111
              containerPort: 111
              protocol: UDP
      volumes:
        - name: nfs-vol
          persistentVolumeClaim:
            claimName: nfs-share
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nfs-kasten  
spec:
  claimRef:
    name: pvc-nfs-kasten
    namespace: kasten-io
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /
    server: #replace with nfs-ip server
    readOnly: false
  mountOptions:
      - hard
      - nfsvers=4.1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-kasten
  namespace: kasten-io
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: alpine
  name: alpine
  namespace: kasten-io
spec:  
  containers:
  - args:
    - tail
    - -f
    - /dev/null
    volumeMounts:
    - name: data
      mountPath: /data
    image: alpine
    name: alpine
    resources: {}
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: pvc-nfs-kasten